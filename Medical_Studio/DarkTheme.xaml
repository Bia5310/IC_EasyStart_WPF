<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:local="clr-namespace:Medical_Studio">

    <Color x:Key="MainFont">#FFFFFF</Color>
    <Color x:Key="YellowDark">#FFFFD556</Color>
    <Color x:Key="DarkBlue1Color">#FF1A89AA</Color>
    <Color x:Key="DarkBlue2Color">#FF133A46</Color>
    
    <SolidColorBrush x:Key="MainFontBrush" Color="{StaticResource MainFont}"/>
    <SolidColorBrush x:Key="DarkBlue1Brush" Color="{StaticResource DarkBlue1Color}"/>
    <SolidColorBrush x:Key="DarkBlue2Brush" Color="{StaticResource DarkBlue2Color}"/>

    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Background" Value="#213742"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#FF095278"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Icon" Value="Icons/MedicalStudioLogo_2.ico"/>
    </Style>

    <SolidColorBrush x:Key="BrushNUD_Signes" Color="White"/>
    <SolidColorBrush x:Key="BrushNUD_Borders" Color="White"/>
    <SolidColorBrush x:Key="BrushNUD_BackgroundStock" Color="{StaticResource DarkBlue1Color}"/>
    <SolidColorBrush x:Key="BrushNUD_BackgroundSelected" Color="{StaticResource DarkBlue2Color}"/>
    <SolidColorBrush x:Key="BrushNUD_Foreground" Color="White"/>
    <SolidColorBrush x:Key="BrushTextBox_Foreground" Color="White"/>
    <SolidColorBrush x:Key="BrushTextBoxDisabled_Foreground" Color="White"/>
    <SolidColorBrush x:Key="BrushTextBoxFocused_Foreground" Color="White"/>
    <SolidColorBrush x:Key="BrushTextBoxChecked_Foreground" Color="#345BBC"/>
    <SolidColorBrush x:Key="SliderBrushInner" Color="{StaticResource DarkBlue2Color}"/>
    <SolidColorBrush x:Key="SliderBrushBorder" Color="{StaticResource DarkBlue1Color}"/>
    <SolidColorBrush x:Key="SliderBrushFill" Color="{StaticResource YellowDark}"/>
    <SolidColorBrush x:Key="BrushButtonBorderStock" Color="White"/>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <SolidColorBrush x:Key="NormalBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="PressedBrush" Color="#FF4F4F4F" />

    <Style x:Key="ExpanderStyle" TargetType="Expander">
        <Setter Property="Background" Value="#305060"/>
        <Setter Property="BorderBrush" Value="#FF557585"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Background" Value="#6984D3"/>
        <Setter Property="BorderBrush" Value="#345BBC"/>
    </Style>

    <Style x:Key="BorderDownStyle" TargetType="Border">
        <Setter Property="Background" Value="#305060"/>
        <Setter Property="BorderBrush" Value="#FF557585"/>
    </Style>

    <Style x:Key="SplitterStyle" TargetType="GridSplitter">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFBF00"/>
            </Trigger>
        </Style.Triggers>
        <Style.Setters>
            <Setter Property="Background" Value="#FF095278"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#FF095278"/>
        </Style.Setters>
    </Style>

    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="#FF1F2529"/>
    </Style>

    <Style x:Key="ToggleButtonFSStyle" TargetType="{x:Type ToggleButton}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="grid">
                            <Border CornerRadius="5" x:Name="border">
                                <Image x:Name="image"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Source" TargetName="image" Value="FS_off.png"/>
                                <Setter Property="Background" TargetName="border" Value="#3FFFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Source" TargetName="image" Value="FS_on.png"/>
                                <Setter Property="Background" TargetName="border" Value="#3FFFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#BFFFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
 
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="MaxHeight" Value="45"/>
        <Setter Property="Template" Value="{DynamicResource DarkButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#345BBC"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DarkButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Grid x:Name="grid">
            <Border x:Name="border" CornerRadius="3" BorderBrush="{DynamicResource BrushButtonBorderStock}" BorderThickness="1" Background="{DynamicResource GradientStockBrushButton}">
                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.Foreground="White"
                                          TextElement.FontSize="14"
                                          Margin="10 7 10 7"
                                          x:Name="content">
                </ContentPresenter>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.Setters>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFBF00"/>
                    <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource GradientMouseOverBrushButton}"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="#FFBF00"/>
                <Setter Property="Background" TargetName="border" Value="#FFFFD556"/>
                <Setter Property="TextElement.Foreground" TargetName="content" Value="#345BBC"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="grid" Value="0.35"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <RadialGradientBrush GradientOrigin="0.5,1.5" x:Key="GradientStockBrushButton">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                        ScaleX="1.5" ScaleY="1.5"/>
                <TranslateTransform X="0.02" Y="0.3"/>
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Offset="1" Color="{StaticResource DarkBlue1Color}"/>
        <GradientStop Offset="0" Color="{StaticResource DarkBlue2Color}"/>
    </RadialGradientBrush>

    <RadialGradientBrush GradientOrigin="0.5,1.5" x:Key="GradientMouseOverBrushButton">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                <TranslateTransform X="0.02" Y="0.3"/>
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="{StaticResource DarkBlue1Color}" Offset="1"/>
        <GradientStop Color="#FFFFD556" Offset="0.3"/>
    </RadialGradientBrush>

    <Style x:Key="ToggleButtonSimpleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="MaxHeight" Value="45"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="3" BorderBrush="White" BorderThickness="1">
                            <Border.Background>
                                <RadialGradientBrush GradientOrigin="0.5,1.5">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                        ScaleX="1.5" ScaleY="1.5"/>
                                            <TranslateTransform X="0.02" Y="0.3"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="{StaticResource DarkBlue1Color}"/>
                                    <GradientStop Offset="0" Color="{StaticResource DarkBlue2Color}"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.Foreground="White"
                                          TextElement.FontSize="14"
                                          Margin="10 7 10 7"
                                          x:Name="content">
                            </ContentPresenter>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFBF00"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.5,1.5">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="{StaticResource DarkBlue1Color}" Offset="1"/>
                                            <GradientStop Color="#FFFFD556" Offset="0.3"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFBF00"/>
                            <Setter Property="Background" TargetName="border" Value="#FFFFD556"/>
                            <Setter Property="TextElement.Foreground" TargetName="content" Value="#345BBC"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFBF00"/>
                            <Setter Property="Background" TargetName="border" Value="#FFFFD556"/>
                            <Setter Property="TextElement.Foreground" TargetName="content" Value="#345BBC"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.35"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#345BBC"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#345BBC"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="ToggleButtonRenameableStyle" TargetType="local:RenameableToggleButton" BasedOn="{StaticResource ToggleButtonSimpleStyle}"/>-->

    <!--<Style TargetType="{x:Type local:ToggleButtonRenameable}"
           x:Key="ToggleButtonRenameableStyle">
        <Style.Triggers>
            <Trigger Property="TextBox.IsFocused" Value="True">
                <Setter Property="TextBox.Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Style" Value="{StaticResource ToggleButtonSimpleStyle}"/>
    </Style>-->

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxRenameable">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="MaxHeight" Value="45"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="3" BorderBrush="White" BorderThickness="1">
                            <Border.Background>
                                <RadialGradientBrush GradientOrigin="0.5,1.5">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                        ScaleX="1.5" ScaleY="1.5"/>
                                            <TranslateTransform X="0.02" Y="0.3"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="{StaticResource DarkBlue1Color}"/>
                                    <GradientStop Offset="0" Color="{StaticResource DarkBlue2Color}"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.Foreground="White"
                                          TextElement.FontSize="14"
                                          Margin="10 7 10 7"
                                          x:Name="content">
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFBF00"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.5,1.5">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="{StaticResource DarkBlue1Color}" Offset="1"/>
                                            <GradientStop Color="#FFFFD556" Offset="0.3"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFBF00"/>
                            <Setter Property="Background" TargetName="border" Value="#FFFFD556"/>
                            <Setter Property="TextElement.Foreground" TargetName="content" Value="#345BBC"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFBF00"/>
                            <Setter Property="Background" TargetName="border" Value="#FFFFD556"/>
                            <Setter Property="TextElement.Foreground" TargetName="content" Value="#345BBC"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#345BBC"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#345BBC"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CheckBoxSimpleStyle" TargetType="CheckBox">
        <Style.Setters>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="4 0 4 0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Grid>
                                    <Border x:Name="Border" CornerRadius="2"
                                        BorderThickness="1"
                                        Height="{TemplateBinding Height}"
                                        Width="{TemplateBinding Width}"
                                        Background="{DynamicResource GradientStockBrushButton}"
                                        BorderBrush="White">
                                        <ContentPresenter x:Name="content"
                                                      Content="{TemplateBinding Content}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"
                                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                                      TextBlock.FontSize="{TemplateBinding FontSize}"
                                                      TextBlock.FontStretch="{TemplateBinding FontStretch}"
                                                      Opacity="{TemplateBinding Opacity}">
                                        </ContentPresenter>
                                    </Border>
                                </Grid>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.Setters>
                                    <Setter Property="BorderBrush" TargetName="Border" Value="#FFBF00"/>
                                    <Setter Property="Background" TargetName="Border">
                                        <Setter.Value>
                                            <RadialGradientBrush GradientOrigin="0.5,1.5">
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                        <TranslateTransform X="0.02" Y="0.3"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="{StaticResource DarkBlue1Color}" Offset="1"/>
                                                <GradientStop Color="#FFFFD556" Offset="0.3"/>
                                            </RadialGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger.Setters>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FFBF00"/>
                                <Setter Property="Background" TargetName="Border" Value="#FFFFD556"/>
                                <Setter Property="TextElement.Foreground" TargetName="content" Value="#345BBC"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FFBF00"/>
                                <Setter Property="Background" TargetName="Border" Value="#FFFFD556"/>
                                <Setter Property="TextElement.Foreground" TargetName="content" Value="#345BBC"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="Border" Value="0.35"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#FFFFD350"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Slider-->
    <Style TargetType="{x:Type Slider}" x:Key="SliderStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Track Grid.Row="1" x:Name="PART_Track"   >
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource SliderRepeatButtonLeft}"  Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource SliderThumbStyle}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource SliderRepeatButtonRight}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolBarTray" x:Key="ToolBarStyle">
        <Setter Property="Background" Value="#FF557585"/>
    </Style>

    <Style x:Key="SliderRepeatButtonLeft" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  BorderThickness="1 1 0 1" BorderBrush="{DynamicResource DarkBlue1Brush}" CornerRadius="6 0 0 2"
                             Background="{DynamicResource SliderBrushFill}" Height="8" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SliderRepeatButtonRight" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  BorderThickness="0 1 1 1" CornerRadius="0 2 6 0" BorderBrush="{DynamicResource SliderBrushBorder}" 
                             Background="{DynamicResource  SliderBrushInner}" Height="8" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="SliderThumbStyle" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="Border" Height="20" Width="12" 
                            BorderBrush="{DynamicResource BrushButtonBorderStock}" CornerRadius="2" 
                            BorderThickness="1" Background="{DynamicResource GradientStockBrushButton}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource GradientMouseOverBrushButton}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DarkYellowBrush}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    <!--End Slider-->

    <Style x:Key="TextBoxSytle" TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource DarkBlue1Brush}"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" 
                                    x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.5" x:Name="WatermarkTextBlock" Text="{TemplateBinding Tag}" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="WatermarkTextBlock" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkBlue2Brush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Width="16" Height="16">
                        <Rectangle x:Name="boxRectangle" RadiusX="2" RadiusY="2" HorizontalAlignment="Left">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="#345BBC"/>
                            </Rectangle.Fill>
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="LightGray"/>
                            </Rectangle.Stroke>

                        </Rectangle>
                        <Path x:Name="checkPath" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" Width="7" Height="7">
                            <Path.Stroke>
                                <SolidColorBrush Color="Yellow"/>
                            </Path.Stroke>
                        </Path>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="checkPath" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="checkPath" Value="Hidden"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="CircleCheckbox">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Content" Value=""></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Ellipse x:Name="outerEllipse">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Offset="0" Color="Red"/>
                                    <GradientStop Offset="0.88" Color="LightCoral"/>
                                    <GradientStop Offset="1" Color="DarkRed"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Margin="10" x:Name="highlightCircle" >
                            <Ellipse.Fill >
                                <LinearGradientBrush >
                                    <GradientStop Offset="0" Color="Green"/>
                                    <GradientStop Offset="0.5" Color="LightGreen"/>
                                    <GradientStop Offset="1" Color="DarkGreen"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="Green"/>
                                        <GradientStop Offset="0.5" Color="LightGreen"/>
                                        <GradientStop Offset="1" Color="DarkGreen"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="outerEllipse" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="Green"/>
                                        <GradientStop Offset="0.88" Color="LightGreen"/>
                                        <GradientStop Offset="1" Color="DarkGreen"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="Red"/>
                                        <GradientStop Offset="0.5" Color="LightCoral"/>
                                        <GradientStop Offset="1" Color="DarkRed"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#345BBC"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#345BBC"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                Value="#FFAAAAAA"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <UniformGrid x:Name="HeaderPanel"
                                Grid.Row="0"
                                Panel.ZIndex="1"
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1"
                                Background="Transparent"
                                Columns="3"/>
                        <Border x:Name="Border"
                                Grid.Row="1"
                                BorderThickness="0"
                                Background="Transparent"
                                BorderBrush="White"
                                CornerRadius="0 0 3 3"
                                Margin="0"
                                ClipToBounds="True"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                            ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="Border"
                                Margin="0 0 0 0"
                                BorderThickness="1"
                                CornerRadius="4 4 0 0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="White" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <RadialGradientBrush GradientOrigin="0.5,1.5">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5"
                                                        ScaleX="1.5" ScaleY="1.5"/>
                                            <TranslateTransform X="0.02" Y="0.3"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="{StaticResource DarkBlue1Color}"/>
                                    <GradientStop Offset="0" Color="{StaticResource DarkBlue2Color}"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="ContentSite"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header"
                              Margin="12,2,12,2"
                              RecognizesAccessKey="True"
                              TextElement.Foreground="White"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FFBF00"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.5,1.5">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="{StaticResource DarkBlue1Color}" Offset="1"/>
                                            <GradientStop Color="#FFFFD556" Offset="0.3"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FFBF00"/>
                            <Setter Property="Background" TargetName="Border" Value="#FFFFD556"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="#345BBC"/>
                            <Setter Property="Foreground" Value="#345BBC"/>
                            <Setter Property="Panel.ZIndex" Value="100"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SCROLL BAR -->
    
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Background" Value="{StaticResource HorizontalNormalBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HorizontalNormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"  Width="8" Margin="1,0,1,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#A5A5A5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Background" Value="{StaticResource HorizontalNormalBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HorizontalNormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"  Height="8" Margin="0,1,0,1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#A5A5A5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="0"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="1,0,1,0"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="0"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="0"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Transparent"/>
            <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- SCROLL BAR END-->
    
</ResourceDictionary>